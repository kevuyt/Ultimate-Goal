import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.3'
    ndkVersion '21.4.7075529'

    signingConfigs {
        release {
            def apkStoreFile = System.getenv("APK_SIGNING_STORE_FILE")
            if (apkStoreFile != null) {
                keyAlias System.getenv("APK_SIGNING_KEY_ALIAS")
                keyPassword System.getenv("APK_SIGNING_KEY_PASSWORD")
                storeFile file(System.getenv("APK_SIGNING_STORE_FILE"))
                storePassword System.getenv("APK_SIGNING_STORE_PASSWORD")
            } else {
                keyAlias 'androiddebugkey'
                keyPassword 'android'
                storeFile rootProject.file('libs/ftc.debug.keystore')
                storePassword 'android'
            }
        }
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile rootProject.file('libs/ftc.debug.keystore')
            storePassword 'android'
        }
    }


    defaultConfig {
        signingConfig signingConfigs.debug
        applicationId 'com.qualcomm.ftcrobotcontroller'
        minSdkVersion 23
        targetSdkVersion 30

        def manifestFile = project(':FtcRobotController').file('src/main/AndroidManifest.xml')
        def manifestText = manifestFile.getText()
        def vCodePattern = Pattern.compile("versionCode=\"(\\d+(\\.\\d+)*)\"")
        def matcher = vCodePattern.matcher(manifestText)
        matcher.find()
        def vCode = Integer.parseInt(matcher.group(1))
        def vNamePattern = Pattern.compile("versionName=\"(.*)\"")
        matcher = vNamePattern.matcher(manifestText)
        matcher.find()
        def vName = matcher.group(1)
        versionCode vCode
        versionName vName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            ndk {abiFilters "armeabi-v7a"}
        }
        debug {
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            ndk {abiFilters "armeabi-v7a"}
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir rootProject.file('libs')
    }
}

repositories {flatDir {dirs rootProject.file('libs')}}